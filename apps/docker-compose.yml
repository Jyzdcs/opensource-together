version: '3.8'

services:
  business_db:
    image: postgres:16
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${BUSINESS_DB_USER}
      - POSTGRES_PASSWORD=${BUSINESS_DB_PASSWORD}
      - POSTGRES_DB=${BUSINESS_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - business_db_data:/var/lib/postgresql/data
      - ./server/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${BUSINESS_DB_USER}', '-d', '${BUSINESS_DB_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:10.1.0
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3567:3567"
    env_file:
      - .env
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRESQL_CONNECTION_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - DATABASE_URL=postgresql://${BUSINESS_DB_USER}:${BUSINESS_DB_PASSWORD}@business_db:5432/${BUSINESS_DB_NAME}?schema=public
      - SUPERTOKENS_HOST=supertokens
      - SUPERTOKENS_PORT=3567
    networks:
      - app_network
    depends_on:
      business_db:
        condition: service_healthy
      supertokens:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000
    networks:
      - app_network
    depends_on:
      - backend

volumes:
  business_db_data:
  db_data:

networks:
  app_network:
    driver: bridge
