---
description: 
globs: 
alwaysApply: false
---
📦 opensource-together/
├── 📁 app/                            # Routes de l'App Router (Next.js)
│   ├── 📁 dashboard/                  # Interface utilisateur protégée (Dashboard)
│   │   ├── 📄 layout.tsx
│   │   └── 📄 page.tsx
│   ├── 📁 (auth)/                     # Routes publiques pour l'authentification
│   │   └── 📁 login/
│   │       └── 📄 page.tsx
│   └── 📄 layout.tsx                  # Layout global de l'application
│
├── 📁 features/                       # Chaque feature est isolée
│   ├── 📁 auth/                       # Authentification & inscription
│   │   ├── 📁 components/             # Composants UI spécifiques à l'auth
│   │   │   └── LoginForm.tsx
│   │   ├── 📁 views/                  # Composants « smart » (présentation)
│   │   │   └── LoginView.tsx
│   │   ├── 📁 lib/                    # Fonctions métiers (appel API, etc.)
│   │   │   └── authApi.ts
│   │   ├── 📁 hooks/                  # Hooks spécifiques à l'authentification
│   │   │   └── useAuth.ts
│   │   └── 📁 types/                  # Types locaux pour l'auth
│   │       └── auth.ts
│   │
│   ├── 📁 projects/                   # Gestion des projets open source
│   │   ├── 📁 components/             # Composants UI liés aux projets
│   │   │   ├── ProjectCard.tsx        # Carte de présentation d'un projet
│   │   │   └── ProjectSearchBar.tsx   # Barre de recherche de projets
│   │   ├── 📁 views/                  # Affichages sur les projets
│   │   │   ├── ProjectsList.tsx       # Liste ou page de recherche des projets
│   │   │   └── ProjectDetail.tsx      # Détail d'un projet
│   │   ├── 📁 lib/                    # Appels d'API et logique métier pour les projets
│   │   │   └── projectsApi.ts
│   │   ├── 📁 hooks/                  # Hooks liés aux projets
│   │   │   └── useProjects.ts
│   │   └── 📁 types/                  # Types relatifs aux projets
│   │       └── project.ts
│   │
│   ├── 📁 profile/                    # Profil utilisateur & gamification
│   │   ├── 📁 components/
│   │   │   └── ProfileCard.tsx
│   │   ├── 📁 views/
│   │   │   └── ProfileView.tsx
│   │   ├── 📁 lib/
│   │   │   └── profileApi.ts
│   │   ├── 📁 hooks/
│   │   │   └── useProfile.ts
│   │   └── 📁 types/
│   │       └── profile.ts
│   │
│   ├── 📁 guides/                     # Guides d'éducation à l'open source
│   │   ├── 📁 components/
│   │   │   └── GuideList.tsx
│   │   ├── 📁 views/
│   │   │   └── GuideDetail.tsx
│   │   ├── 📁 lib/
│   │   │   └── guidesApi.ts
│   │   ├── 📁 hooks/
│   │   │   └── useGuides.ts
│   │   └── 📁 types/
│   │       └── guide.ts
│   │
│   └── 📁 issues/                     # Gestion des issues collaboratives & intégration GitHub
│       ├── 📁 components/
│       │   └── IssueItem.tsx
│       ├── 📁 views/
│       │   └── IssuesList.tsx
│       ├── 📁 lib/
│       │   └── issuesApi.ts
│       ├── 📁 hooks/
│       │   └── useIssues.ts
│       └── 📁 types/
│           └── issue.ts
│
├── 📁 components/                    # Design system global & composants réutilisables
│   ├── 📁 ui/                         # Boutons, modals, etc.
│   │   ├── Button.tsx
│   │   └── Modal.tsx
│   ├── 📁 layout/                     # Header, Footer, Sidebar, etc.
│   │   ├── Header.tsx
│   │   ├── Footer.tsx
│   │   └── Sidebar.tsx
│   └── 📁 icons/                      # Icônes personnalisées
│       └── LogoIcon.tsx
│
├── 📁 lib/                           # Librairies et utilitaires partagés
│   ├── 📁 api/                        # Instance axios ou fetcher
│   │   └── fetcher.ts
│   └── 📁 utils/                      # Fonctions génériques (formatage, etc.)
│       ├── formatDate.ts
│       └── mergeClasses.ts
│
├── 📁 stores/                        # State global (ex: Zustand)
│   └── userStore.ts
│
├── 📁 hooks/                         # Hooks globaux partagés
│   └── useMediaQuery.ts
│
├── 📁 config/                        # Configurations globales (routes, constantes)
│   ├── site.ts
│   └── navigation.ts
│
├── 📁 types/                         # Types globaux ou partagés
│   └── global.d.ts
│
├── 📁 public/
│   └── favicon.ico
│
├── 📄 tailwind.config.ts
├── 📄 tsconfig.json
└── 📄 next.config.js
